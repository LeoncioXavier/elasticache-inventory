name: Release

on:
  push:
    tags:
      - 'v*'

jobs:
  create-release:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install build twine

    - name: Run tests
      run: |
        pip install -r requirements.txt
        pytest tests/ -v

    - name: Build package
      run: python -m build

    - name: Get version from tag
      id: get_version
      run: echo "VERSION=${GITHUB_REF#refs/tags/v}" >> $GITHUB_OUTPUT

    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref }}
        release_name: Release v${{ steps.get_version.outputs.VERSION }}
        body: |
          ## Changes in v${{ steps.get_version.outputs.VERSION }}
          
          Please see [CHANGELOG.md](https://github.com/${{ github.repository }}/blob/main/CHANGELOG.md) for detailed changes.
          
          ## Installation
          
          ```bash
          pip install elasticache-inventory==${{ steps.get_version.outputs.VERSION }}
          ```
          
          ## Docker
          
          ```bash
          docker pull ghcr.io/${{ github.repository }}:v${{ steps.get_version.outputs.VERSION }}
          ```
        draft: false
        prerelease: false

    - name: Upload Release Assets
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./dist/elasticache_scanner-${{ steps.get_version.outputs.VERSION }}-py3-none-any.whl
        asset_name: elasticache_scanner-${{ steps.get_version.outputs.VERSION }}-py3-none-any.whl
        asset_content_type: application/octet-stream